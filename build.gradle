buildscript {
    ext {
        springBootPlugin = 'org.springframework.boot:spring-boot-gradle-plugin'
        springBootVersion = "2.2.6.RELEASE"
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
        classpath('net.ltgt.gradle:gradle-apt-plugin:0.18')
    }
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.ewerk.gradle.plugins.querydsl"
apply from: "$rootDir/jpa.gradle"

group = 'com.jpanylee'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
ext['log4j2.version'] = '2.15.0'

bootJar {
    archivesBaseName = 'jpanylee'
    archiveFileName = 'jpanylee.jar'
    archiveVersion = "0.0.1"
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compile 'org.springframework.boot:spring-boot-starter-undertow'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module:'spring-boot-starter-tomcat'
    }
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    compile 'org.springframework.boot:spring-boot-starter-aop'

    // runtime
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'org.projectlombok:lombok'

    // compile
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.15'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
//    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile 'org.apache.commons:commons-lang3:3.12.0'

    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'junit:junit:4.13.2'
    testImplementation 'org.springframework.security:spring-security-test'

    // development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // etc
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}
